
		Algorythms:
			Sorting methods:
				1. Insertion Sort
				2. Shell Sort
				3. Quick Sort 
				4. Bubble Sort
				5. Selection Sort
				6. Merge Sort
				
			Search methods:
				1. Binary Search
				2. Interpolational Search//Dictionbary Search
				3. Quadratic Binary Search (QBS)
			
Generate an array with 1000 elements with numbers from 1 to 200 in a random generation of the number > sort the array using shell sort >> print the sorted array


//============================================================================
// Name        : Algorythms.cpp
// Author      : Ventsislav
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

//============================================================================
// Name        : Algorythms.cpp
// Author      : Ventsislav
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <stdlib.h>
#include <time.h>

#define MAX_ELEMENTS 1000

using namespace std;

int main() {

	int arr[MAX_ELEMENTS];
	int temp = 0;
	
	srand (time(NULL));

	//initialize array
	for(int i = 0; i < MAX_ELEMENTS; i++){
		arr[i] = rand() % 200 + 1;
	}

	 for(int i= MAX_ELEMENTS/2; i>0; i=i/2)
	 {
	   for(int j=i; j < MAX_ELEMENTS; j++)
	   {
	     for(int k=j-i; k>=0; k=k-i)
	     {
	        if(arr[k+i] >= arr[k])
	            break;
	        else
	        {
	        	temp=arr[k];
	            arr[k]=arr[k+i];
	            arr[k+i]=temp;
	        }
	     }
	   }
	 }

	temp = 0;
	for(int i = 0; i < MAX_ELEMENTS; i++){
			cout << arr[i]<< " ";
			if(temp == 10){
				temp = 0;
				cout << endl;
			}
	}
	cout << endl;

	return 0;
}
